install.packages("arm")
install.packages("R2jags")
install.packages("RMySQL")
?mantel
?vegdit
?vegdist
library(vegan)
?vegdist
?mantel
hclust
?hclust
pi
a1<-pi*(5,304/2)^2
a1<-pi*(5.304/2)^2
(10*a1/pi)^(1/2)*2
(10*a1/pi)^(1/2)
a10<-pi*(16.056/2)^2
a10
a1
d50<-(5*a10)^(1/2)*2
d50
d50<-(5*a10/pi)^(1/2)*2
d50
a50=(d50/2)^2*pi
a50
d50<-(5*a10/pi)^(1/2)*2
a10<-pi*(16.976/2)^2
d50<-(5*a10/pi)^(1/2)*2
d50
citation()
library(devtools)
install_github("christianparobek/skeleSim", build_vignettes = TRUE, force = TRUE)
install.packages("devtools")
library(devtools)
install_github("christianparobek/skeleSim", build_vignettes = TRUE, force = TRUE)
library(skeleSim)
skeleSimGUI()
library(skeleSim)
install.packages("apex")
install.packages("ape")
library(apex)
install.packages("phytools")
library(apex)
install.packages("rbamtools")
install.packages("rentrez")
library(rentrez)
entrez_dbs()
entrez_dbs()
?entrez_dbs()
entrez_dbs(pubmed)
entrez_dbs("pubmed")
entrez_db_searchable("nucleotide")
entrez_db_summary("nucleotide")
entrez_db_links("nucleotide")
r_search <- entrez_search(db="pubmed", term="camacho-sanchez")
r_search
str(r_search)
r_search$ids
?entrez_search
entrez_db_searchable("nucleotide")
r_search <- entrez_search(db="nucleotides", term="Rattus baluensis[ORGN]")
entrez_search(db="sra",
term="Tetrahymena thermophila[ORGN]",
retmax=0)
r_search <- entrez_search(db="nucleotides", term="Rattus baluensis[ORGN]")
r_search <- entrez_search(db="nucleotides", term="Rattus [ORGN]")
r_search <- entrez_search(db="nucleotide",
term="Rattus baluensis[ORGN]",
retmax=0)
r_search
r_search <- entrez_search(db="nucleotide",
term="Rattus baluensis[ORGN]",
retmax=20)
r_search
summary(r_search)
r_search$ids
all_the_links <- entrez_link(dbfrom='gene', id=351, db='all')
summary(all_the_links)
all_the_links$links
all_the_links$links[1]
all_the_links$links[2]
r_search <- entrez_search(db="pubmed", term="camacho-sanchez")
summary(r_search)
r_search$file
r_search$ids
r_search <- entrez_search(db="pubmed", term="camacho-sanchez AND preservation dna rna")
r_search$ids
entrez_link(dbfom="pubmed", id=r_search$ids, db="all")
entrez_link(dbfrom="pubmed", id=r_search$ids, db="all")
entrez_link(dbfrom="pubmed", id=r_search$ids, db="all")$links
entrez_link(dbfrom="pubmed", id=r_search$ids, db="all")$links[1]
entrez_link(dbfrom="pubmed", id=r_search$ids, db="all")$links[3]
entrez_fetch((dbfrom="pubmed", id=r_search$ids)
entrez_fetch(dbfrom="pubmed", id=r_search$ids)
entrez_fetch(db="pubmed", id=r_search$ids)
entrez_summary(db="pubmed", id=r_search$ids)
entrez_summary(db="pubmed", id=r_search$ids)[5]
r_search <- entrez_search(db="nucleotide",
term="Rattus baluensis[ORGN]",
retmax=20)
summary(r_search)
r_search$ids
entrez_summary(db="nucleotides",id="357089881")
entrez_summary(db="nucleotides",id="357089881")[1]
entrez_summary(db="nucleotide",id="357089881")[1]
entrez_summary(db="nucleotide",id="357089881")
entrez_summary(db="nucleotide",id="357089881")[1]
entrez_summary(db="nucleotide",id="357089881")[26]
entrez_fetch(db="nucleotide",id="357089881")
?extract_from_esummary
?entrez_fetch
entrez_fetch(db="nucleotide",id="357089881",rettype="gb")
entrez_fetch(db="nucleotide",id="357089881",rettype="fasta")
fasta_rb<-entrez_fetch(db="nucleotide",id="357089881",rettype="gb")
class(fasta_rb)
str(fasta_rb)
summary(fasta_rb)
cat(strwrap(substr(fasta_rb, 1, 500)), sep="\n")
cat(strwrap(substr(fasta_rb, 1, 5000)), sep="\n")
fasta_rb<-entrez_fetch(db="nucleotide",id="357089881",rettype="fasta")
cat(strwrap(substr(fasta_rb, 1, 5000)), sep="\n")
entrez_dbs()
r_search <- entrez_search(db="popset", term="marie pages 2013")
summary(r_search)
r_search$ids
r_search$file
r_search <- entrez_search(db="popset", term="citonuclear discordances rattus")
summary(r_search)
r_search$ids
r_search$count
r_search$file
r_search <- entrez_search(db="pubmed", term="citonuclear discordances rattus")
summary(r_search)
r_search <- entrez_search(db="pubmed", term="citonuclear discordances rattus AND 2013[YEAR]")
summary(r_search)
r_search <- entrez_search(db="nucleotide",
term="Rattus baluensis[ORGN]",
retmax=20)
r_search$ids
entrez_summary(db="nucleotide",id="357089881")
for i in (1:30){entrez_summary(db="nucleotide",id="357089881")
for (i in c(1:30)){entrez_summary(db="nucleotide",id="357089881")[i]}
tabla<-data.frame()
for (i in c(1:30)){
tabla[i]<- entrez_summary(db="nucleotide",id="357089881")[i]}
tabla<-data.frame()
for (i in c(1:10)){
tabla[i,1]<- entrez_summary(db="nucleotide",id="357089881")[i]}
tabla
for (i in c(1:30)){
tabla[i,1]<- entrez_summary(db="nucleotide",id="357089881")[i]}
tabla
install.packages("phyloch")
library(devtools)
install_github('ClockstaR', 'sebastianduchene')
library(ClockstaR2)
example(ClockstaR2)
install.packages("treespace")
library(treespace)
treespaceServer()
?manova
read.csv("/Users/miguelcamacho/Downloads/Libro1.csv")
DATA<-read.csv("/Users/miguelcamacho/Downloads/Libro1.csv",sep=";")
a<-as.data.frame(DATA)
str(a)
a$id<-as.factor(a$id)
str(a)
levels(a$id)
levels(a$id)==1
levels(a$id)[|]
levels(a$id)[1]
levels(a$id)[2]
for (i in nlevels(a$id)){
temp<-a[a$id==levels(a$id)[i],]
}
temp
newa<-a
DATA<-read.csv("/Users/miguelcamacho/Downloads/Libro1.csv",sep=";")
a<-as.data.frame(DATA)
a
str(a)
DATA<-read.csv("/Users/miguelcamacho/Downloads/Libro1.csv",sep=";")
a<-as.data.frame(DATA)
a
DATA<-read.csv("/Users/miguelcamacho/Downloads/Libro1.csv",sep=";")
a<-as.data.frame(DATA)
a
str(a)
a$id<-as.factor(a$id)
newa<-a
lastvalue<-temp[nrow(temp),2]
newa<-a[a$id==levels(a$id)[1],]
newa
newa<-cbind(a[a$id==levels(a$id)[1],],a[a$id==levels(a$id)[1],][2])
newa
a<-as.data.frame(DATA)
str(a)
a$id<-as.factor(a$id)
newa<-cbind(a[a$id==levels(a$id)[1],],a[a$id==levels(a$id)[1],][2])
for (i in 2:nlevels(a$id)){
lastvalue<-newa[nrow(newa),2]
temp<-a[a$id==levels(a$id)[i],]
for (j in nrow(temp)){
temp[j,3]<-lastvalue+temp[j,2]
}
newa<-rbind(newa,temp)
}
lastvalue<-newa[nrow(newa),2]
temp<-a[a$id==levels(a$id)[i],]
for (j in nrow(temp)){
temp[j,3]<-lastvalue+temp[j,2]
}
newa<-rbind(newa,temp)
newa
temp
for (i in 2:nlevels(a$id)){
lastvalue<-newa[nrow(newa),2]
temp<-a[a$id==levels(a$id)[i],]
names(temp)<-names(newa)
for (j in 1:nrow(temp)){
temp[j,3]<-lastvalue+temp[j,2]
}
newa<-rbind(newa,temp)
}
names(temp)
names(newa)
for (i in 2:nlevels(a$id)){
lastvalue<-newa[nrow(newa),2]
temp<-a[a$id==levels(a$id)[i],]
for (j in 1:nrow(temp)){
temp[j,3]<-lastvalue+temp[j,2]
}
names(temp)<-names(newa)
newa<-rbind(newa,temp)
}
newa
a<-as.data.frame(DATA)
str(a)
a$id<-as.factor(a$id)
newa<-cbind(a[a$id==levels(a$id)[1],],a[a$id==levels(a$id)[1],][2])
for (i in 2:nlevels(a$id)){
lastvalue<-newa[nrow(newa),3]
temp<-a[a$id==levels(a$id)[i],]
for (j in 1:nrow(temp)){
temp[j,3]<-lastvalue+temp[j,2]
}
names(temp)<-names(newa)
newa<-rbind(newa,temp)
}
newa
DATA
newa
library(ape)
setwd("/Users/miguelcamacho/Dropbox/Tesis/Projects/DoÃ±anaIntrons/alignments")
dat<-read.dna(file="28_alignment_conRbal_gblocks_AApos1-out.phy", format = "sequential", as.character=TRUE, skip=0)
dat<-as.DNAbin(dat)
dist<-dist.dna(dat, model="raw")
dist.corrected<-dist.dna(dat, model="TN93")
plot(dist~dist.corrected, pch=20, col="red", xlab="TrN model distance", ylab="Uncorrected genetic distance", main="Saturation Plot")
abline(0,1, lty=2)
abline(lm(dist~dist.corrected), lwd=3)
lm_coef<-coef(lm(dist~dist.corrected))
text(0.1,0.05,bquote(y == .(lm_coef[2])*x))
dat1<-read.dna(file="28_alignment_conRbal_gblocks_AApos1-out.phy", format = "sequential", as.character=TRUE, skip=0)
dat1<-as.DNAbin(dat1)
dist1<-dist.dna(da1t, model="raw")
dist.corrected1<-dist.dna(dat1, model="TN93")
dat1<-read.dna(file="28_alignment_conRbal_gblocks_AApos1-out.phy", format = "sequential", as.character=TRUE, skip=0)
dat1<-as.DNAbin(dat1)
dist1<-dist.dna(dat1, model="raw")
dist.corrected1<-dist.dna(dat1, model="TN93")
plot(dist1~dist.corrected1, pch=20, col="red", xlab="TrN model distance", ylab="Uncorrected genetic distance", main="Saturation Plot")
abline(0,1, lty=2)
abline(lm(dist1~dist.corrected1), lwd=3)
lm_coef<-coef(lm(dist1~dist.corrected1))
lm_coef1<-coef(lm(dist1~dist.corrected1))
text(0.1,0.05,bquote(y == .(lm_coef1[2])*x))
dat2<-read.dna(file="28_alignment_conRbal_gblocks_AApos1-out.phy", format = "sequential", as.character=TRUE, skip=0)
dat3<-read.dna(file="28_alignment_conRbal_gblocks_AApos1-out.phy", format = "sequential", as.character=TRUE, skip=0)
dat1<-as.DNAbin(dat1)
dat1<-read.dna(file="28_alignment_conRbal_gblocks_AApos1-out.phy", format = "sequential", as.character=TRUE, skip=0)
dat2<-read.dna(file="28_alignment_conRbal_gblocks_AApos1-out.phy", format = "sequential", as.character=TRUE, skip=0)
dat3<-read.dna(file="28_alignment_conRbal_gblocks_AApos1-out.phy", format = "sequential", as.character=TRUE, skip=0)
dat1<-as.DNAbin(dat1)
dat2<-as.DNAbin(dat2)
dat3<-as.DNAbin(dat3)
dat2<-read.dna(file="28_alignment_conRbal_gblocks_AApos2-out.phy", format = "sequential", as.character=TRUE, skip=0)
dat3<-read.dna(file="28_alignment_conRbal_gblocks_AApos3-out.phy", format = "sequential", as.character=TRUE, skip=0)
dat2<-as.DNAbin(dat2)
dat3<-as.DNAbin(dat3)
dist1<-dist.dna(dat1, model="raw")
dist2<-dist.dna(dat2, model="raw")
dist3<-dist.dna(dat3, model="raw")
dist.corrected1<-dist.dna(dat1, model="TN93")
dist.corrected2<-dist.dna(dat2, model="TN93")
dist.corrected3<-dist.dna(dat3, model="TN93")
plot(dist1~dist.corrected1, pch=20, col="red", xlab="TrN model distance", ylab="Uncorrected genetic distance", main="Saturation Plot")
abline(0,1, lty=2)
points(dist1~dist.corrected1, pch=20, col="blue")
plot(dist1~dist.corrected1, pch=20, col="red", xlab="TrN model distance", ylab="Uncorrected genetic distance", main="Saturation Plot")
abline(0,1, lty=2)
points(dist2~dist.corrected2, pch=20, col="blue")
points(dist3~dist.corrected3, pch=20, col="blue")
points(dist3~dist.corrected3, pch=20, col="green")
dist3
dist.corrected3
plot(dist1~dist.corrected1, pch=20, col="red", xlab="TrN model distance", ylab="Uncorrected genetic distance", main="Saturation Plot")
points(dist3~dist.corrected3, pch=20, col="green")
plot(dist3~dist.corrected3, pch=20, col="red", xlab="TrN model distance", ylab="Uncorrected genetic distance", main="Saturation Plot")
abline(0,1, lty=2)
points(dist2~dist.corrected2, pch=20, col="blue")
points(dist1~dist.corrected1, pch=20, col="green")
plot(dist1~dist.corrected1, pch=20, col="green")
plot(dist2~dist.corrected2, pch=20, col="blue")
plot(dist3~dist.corrected3, pch=20, col="red", xlab="TrN model distance", ylab="Uncorrected genetic distance", main="Saturation Plot")
plot(dist3~dist.corrected3, pch=20, col="red", xlab="TrN model distance", ylab="Uncorrected genetic distance", main="Saturation plot codon position 3")
plot(dist3~dist.corrected3, pch=20, col="red", xlab="TrN model distance", ylab="Uncorrected genetic distance", main="Saturation plot codon position 3")
abline(0,1, lty=2)
abline(lm(dist3~dist.corrected3), lwd=3)
lm_coef3<-coef(lm(dist3~dist.corrected3))
text(0.1,0.05,bquote(y == .(lm_coef3[2])*x))
?dist.dna
plot(dist1~dist.corrected1, pch=20, col="red", xlab="TrN model distance", ylab="Uncorrected genetic distance", main="Saturation plot codon position 1")
abline(0,1, lty=2)
abline(lm(dist1~dist.corrected1), lwd=3)
lm_coef1<-coef(lm(dist1~dist.corrected1))
text(0.1,0.05,bquote(y == .(lm_coef1[2])*x))
plot(dist2~dist.corrected2, pch=20, col="red", xlab="TrN model distance", ylab="Uncorrected genetic distance", main="Saturation plot codon position 2")
abline(lm(dist2~dist.corrected2), lwd=3)
lm_coef2<-coef(lm(dist2~dist.corrected2))
text(0.1,0.05,bquote(y == .(lm_coef2[2])*x))
abline(0,1, lty=2)
plot(dist3~dist.corrected3, pch=20, col="red", xlab="TrN model distance", ylab="Uncorrected genetic distance", main="Saturation plot codon position 3")
plot(dist3~dist.corrected3, pch=20, col="red", xlab="TrN model distance", ylab="Uncorrected genetic distance", main="Saturation plot codon position 3",xaxs="i")
plot(dist3~dist.corrected3, pch=20, col="red", xlab="TrN model distance", ylab="Uncorrected genetic distance", main="Saturation plot codon position 3",xaxs="i",yaxs="i")
abline(0,1, lty=2)
abline(lm(dist3~dist.corrected3), lwd=3)
lm_coef3<-coef(lm(dist3~dist.corrected3))
text(0.1,0.05,bquote(y == .(lm_coef3[2])*x))
plot(dist3~dist.corrected3, pch=20, col="red", xlab="TrN model distance", ylab="Uncorrected genetic distance", main="Saturation plot codon position 3")
abline(0,1, lty=2)
abline(lm(dist3~dist.corrected3), lwd=3)
lm_coef3<-coef(lm(dist3~dist.corrected3))
text(0.1,0.05,bquote(y == .(lm_coef3[2])*x))
plot(dist3~dist.corrected3, pch=20, col="red", xlab="TrN model distance", ylab="Uncorrected genetic distance", main="Saturation plot codon position 3",xlim=c(0,2.5))
plot(dist3~dist.corrected3, pch=20, col="red", xlab="TrN model distance", ylab="Uncorrected genetic distance", main="Saturation plot codon position 3",xlim=c(0,2.5),ylim=c(0,0.6))
abline(0,1, lty=2)
abline(lm(dist3~dist.corrected3), lwd=3)
lm_coef3<-coef(lm(dist3~dist.corrected3))
text(0.1,0.05,bquote(y == .(lm_coef3[2])*x))
lm_coef3
plot(dist3~dist.corrected3, pch=20, col="red", xlab="TrN model distance", ylab="Uncorrected genetic distance", main="Saturation plot codon position 3",xlim=c(0,2.5),ylim=c(0,0.6))
abline(0,1, lty=2)
abline(lm(dist3~dist.corrected3), lwd=3)
lm_coef3<-coef(lm(dist3~dist.corrected3))
text(0.1,0.05,bquote(y == .(lm_coef3[2])*x))
plot(dist1~dist.corrected1, pch=20, col="red", xlab="TrN model distance", ylab="Uncorrected genetic distance", main="Saturation plot codon position 1")
abline(0,1, lty=2)
abline(lm(dist1~dist.corrected1), lwd=3)
lm_coef1<-coef(lm(dist1~dist.corrected1))
text(0.1,0.05,bquote(y == .(lm_coef1[2])*x))
plot(dist2~dist.corrected2, pch=20, col="red", xlab="TrN model distance", ylab="Uncorrected genetic distance", main="Saturation plot codon position 2")
abline(0,1, lty=2)
abline(lm(dist2~dist.corrected2), lwd=3)
lm_coef2<-coef(lm(dist2~dist.corrected2))
text(0.1,0.05,bquote(y == .(lm_coef2[2])*x))
citation()
?
dist.dna
